<!-- The Modal -->
<div class="modal fade" id="myModal">
  <div class="modal-dialog">
    <div class="modal-content">
    
      <!-- Modal Header -->
      <div class="modal-header">
        <h4 class="modal-title">Cannot degenerate</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      
      <!-- Modal body -->
      <div class="modal-body">
        input image size is too big
      </div>
      
      <!-- Modal footer -->
      <div class="modal-footer">
        <button type="button" class="btn" data-dismiss="modal">Close</button>
      </div>
      
    </div>
  </div>
</div>
<div class= "encrypt-output-caption">
  <p>INPUT IMAGE</p> 
</div>
<div class="input-img-container" hidden>
  <img id="imageSrc" src="/img/thumnails.jpg" onload="fill_input_canvas()" hidden/>
  <img id="imageOut1" src="/img/share1_output_thumnails.jpg" onload="fill_input_canvas()" hidden/>
  <img id="imageOut2" src="/img/share2_output_thumnails.jpg" onload="fill_input_canvas()" hidden/>
</div>
<div class="encrypt-input">
  <canvas id="canvas-imgSrc"></canvas>
</div>
<div class="custom-file upload">
  <input type="file" class="custom-file-input" id="customFile" name="filename" disabled>
  <label class="custom-file-label encrypt-upload" for="customFile">Choose image</label>
</div>
<div class= "encrypt-output-caption">

<p>YOUR MESSAGE</p> 
</div>
  <canvas id="imgCanvas"hidden></canvas>
<img id="imageFromText"hidden>

<div class="text-area">
    <textarea id="text" placeholder="Text"onClick= "document.getElementById('text').innerHTML = ''";>HELLO WORLD !</textarea>
</div>

<div class="submit-button">
  <button type="submit" class="btn submit" id="generate" disabled>GENERATE</button>
</div>
<div class= "encrypt-output-caption">
  <p>SHARE1</p>
  <p>SHARE2</p> 
</div>
<div class="encrypt-output">
  <canvas id="canvasShare1"></canvas>
  <canvas id="canvasShare2"></canvas>
</div>
<div class= "encrypt-output-download">
  <a id="Share1-download" download="share1.png">
    <button class="download" type="button" onClick="download('canvasShare1','Share1-download')" disabled>DOWNLOAD</button>
  </a>
  <a id="Share2-download" download="share2.png">
    <button class="download" type="button" onClick="download('canvasShare2','Share2-download')" disabled>DOWNLOAD</button>
  </a>
</div>
<script type="text/javascript">
	var element = document.getElementsByClassName("nav-link");
  	element[2].classList.add("active");
	//load opencv lib
	function onOpenCvReady() 
	{
		document.getElementsByClassName("submit")[0].disabled = false;
		document.getElementsByClassName("custom-file-input")[0].disabled = false;
		fill_input_canvas();
	}
	//SHOW FILE NAME & IMG TO CANVAS
	$(".custom-file-input").on("change", function() {
		var fileName = $(this).val().split("\\").pop();
		$(this).siblings(".custom-file-label").addClass("selected").html(fileName);
	});	
	function fill_input_canvas()
	{
		let imgElement = document.getElementById('imageSrc');
		let Out1Element = document.getElementById('imageOut1');
		let Out2Element = document.getElementById('imageOut2');
		let img = cv.imread(imgElement);
		let Out1 = cv.imread(Out1Element);
		let Out2 = cv.imread(Out2Element);
		cv.imshow('canvas-imgSrc', img);
		cv.imshow('canvasShare1', Out1);
		cv.imshow('canvasShare2', Out2);
		img.delete();Out1.delete();Out2.delete()
	}
  	//convert text to image
    var canvas = document.getElementById('imgCanvas'),
            ctx = canvas.getContext('2d'),
        img = document.getElementById('imageFromText');

    function grow(el) {
        el.style.height = "10rem";
        el.style.height = (el.scrollHeight)+"px";
    }

    var generate = function(x, y, Height, Width) 
	{
		var text = document.getElementById('text').value.split("\n").join("\n");
		var lines = text.split('\n');
		var lineLengthOrder = lines.slice(0).sort(function(a, b) {
			return b.length - a.length;
		});
		ctx.canvas.width = Width;
		ctx.canvas.height = Height;
		ctx.fillStyle = "white";
		ctx.fillRect(0, 0, canvas.width, canvas.height);
		ctx.textBaseline = "top";
		ctx.fillStyle = "black";
		ctx.font = 0.1*Width+"px iCiel Gotham";
		for (var i = 0; i<lines.length; i++)
			ctx.fillText(lines[i], x, y + (i*Height) );
		img.src = ctx.canvas.toDataURL();
	}
	generate(20, 20, 512, 769);

	//ENCRYPT
	function getRndInteger(min, max) 
	{
		return Math.floor(Math.random() * (max - min + 1) ) + min;
	}
	let imgElement = document.getElementById('imageSrc');
	let inputElement = document.getElementById('customFile');
	inputElement.addEventListener('change', (e) => {
	document.getElementsByClassName("download")[0].disabled = true;
	document.getElementsByClassName("download")[1].disabled = true;
	imgElement.src = URL.createObjectURL(e.target.files[0]);},false);

	document.getElementById("generate").onclick = function() 
	{	
		//read input img					
		let beforeIMG = cv.imread(imgElement);
		//convert text to img2 using input img height & width
		generate(20, 20, 0.5*beforeIMG.rows, 0.5*beforeIMG.cols);
		//encrypt img2 
		let mark = document.getElementById('imgCanvas');
		let img = cv.imread(mark);
		if (img.rows * img.cols > 4000000)
		{
			$('#myModal').modal('show');
			return;
		}
		let gray = new cv.Mat();
		let bin = new cv.Mat()
		var white = 255;
		var black = 210;
		let mat1 = cv.matFromArray(2, 2, cv.CV_8U, [black, black, white, white]);
		let mat2 = cv.matFromArray(2, 2, cv.CV_8U, [white, white, black, black]);
		let mat3 = cv.matFromArray(2, 2, cv.CV_8U, [black, white, black, white]);
		let mat4 = cv.matFromArray(2, 2, cv.CV_8U, [white, black, white, black]);
		let mat5 = cv.matFromArray(2, 2, cv.CV_8U, [white, black, black, white]);
		let mat6 = cv.matFromArray(2, 2, cv.CV_8U, [black, white, white, black]);
		var selections = [[mat1, mat2], [mat3, mat4], [mat5, mat6]]

		cv.cvtColor(img, gray, cv.COLOR_RGBA2GRAY, 0);
		cv.threshold(gray, bin, 0, white, cv.THRESH_BINARY | cv.THRESH_OTSU);
		let share1 = cv.Mat.zeros(bin.rows*2 + beforeIMG.rows % 2, bin.cols*2 + beforeIMG.cols % 2, bin.type())
		let share2 = cv.Mat.zeros(bin.rows*2 + beforeIMG.rows % 2, bin.cols*2 + beforeIMG.cols % 2, bin.type())


		for(var row = 0; row < bin.rows; row++)
		{
			for(var col = 0; col < bin.cols; col++)
			{	
				var randompairs = getRndInteger(0,2);
				if(bin.ucharPtr(row, col)[0] == 0)
				{
					var c1 = selections[randompairs][0];
					var c2 = selections[randompairs][1];
					//share1
					share1.ucharPtr(2*row, 2*col)[0] = c1.ucharPtr(0,0)[0];
					share1.ucharPtr(2*row, 2*col + 1)[0] = c1.ucharPtr(0,1)[0];
					share1.ucharPtr(2*row + 1, 2*col)[0] = c1.ucharPtr(1,0)[0];
					share1.ucharPtr(2*row + 1, 2*col + 1)[0] = c1.ucharPtr(1,1)[0];
					//share2
					share2.ucharPtr(2*row, 2*col)[0] = c2.ucharPtr(0,0)[0];
					share2.ucharPtr(2*row, 2*col + 1)[0] = c2.ucharPtr(0,1)[0];
					share2.ucharPtr(2*row + 1, 2*col)[0] = c2.ucharPtr(1,0)[0];
					share2.ucharPtr(2*row + 1, 2*col + 1)[0] = c2.ucharPtr(1,1)[0];
				}
				else
				{
					var randomC = getRndInteger(0,1);
					var rdC = selections[randompairs][randomC];
					//share1
					share1.ucharPtr(2*row, 2*col)[0] = rdC.ucharPtr(0,0);
					share1.ucharPtr(2*row, 2*col + 1)[0] = rdC.ucharPtr(0,1);
					share1.ucharPtr(2*row + 1, 2*col)[0] = rdC.ucharPtr(1,0);
					share1.ucharPtr(2*row + 1, 2*col + 1)[0] = rdC.ucharPtr(1,1);
					//share2
					share2.ucharPtr(2*row, 2*col)[0] = rdC.ucharPtr(0,0);
					share2.ucharPtr(2*row, 2*col + 1)[0] = rdC.ucharPtr(0,1);
					share2.ucharPtr(2*row + 1, 2*col)[0] = rdC.ucharPtr(1,0);
					share2.ucharPtr(2*row + 1, 2*col + 1)[0] = rdC.ucharPtr(1,1);

				}
			}
		}
		// add share 1 to input img
		for(var row = 0; row < share1.rows; row++)
		{
			for(var col = 0; col < share1.cols; col++)
			{	
				beforeIMG.ucharPtr(row, col)[3] = share1.ucharPtr(row, col)[0];
			}
		}								
		//show
		cv.imshow('canvasShare1', beforeIMG);
		cv.imshow('canvasShare2', share2);
		gray.delete();img.delete();bin.delete();
		mat1.delete();mat2.delete();mat3.delete();mat4.delete();mat5.delete();mat6.delete();
		share1.delete();share2.delete();
		document.getElementsByClassName("download")[0].disabled = false;
		document.getElementsByClassName("download")[1].disabled = false;
	};
	//DOWNLOAD
	function download(canvas_id, download_button_id) 
	{
		var download = document.getElementById(download_button_id);
		var image = document.getElementById(canvas_id).toDataURL("image/png").replace("image/png", "image/octet-stream");
		download.setAttribute("href", image);
	}
</script>